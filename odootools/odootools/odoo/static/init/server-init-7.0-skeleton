#!/bin/bash
#
# chkconfig: 345 95 05
# description: Odoo server
#
# pidfile: /var/run/odoo-server.pid
# config: /etc/odoo-server.conf

### BEGIN INIT INFO
# Provides:				odoo-server-@NAME@
# Required-Start:		postgresql
# Required-Stop:		postgresql
# Should-Start:			$network harddrake
# Should-Stop:			$network
# Default-Start:		2 3 4 5
# Default-Stop:			0 1 6
# Short-Description:	Odoo - Enterprise Resource Management software
# Description:			Odoo is a complete ERP and CRM software.
### END INIT INFO

SERVERNAME=@NAME@
BASE_PATH=@PATH@
USER=@USER@
BRANCH=@BRANCH@
DBFILTER=@DBFILTER@

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin
DAEMON=${BASE_PATH}/bin/odoo-server-${SERVERNAME}
NAME=odoo-server-${SERVERNAME}
DESC="Odoo server"
PIDDIR=/var/run/odoo
PIDFILE=${PIDDIR}/${SERVERNAME}/server.pid
LOCKFILE=/var/lock/subsys/odoo-server-${SERVERNAME}
CONFIGFILE=/etc/odoo/${BRANCH}/server/${SERVERNAME}.conf
DAEMON_OPTS="--config=$CONFIGFILE --db-filter=${DBFILTER}"

# Exit if the package is not installed
if [ ! -x "$DAEMON" ] ; then
    echo "Daemon file: not execute permitions or file not found"
    exit 0
fi

# Exit if the config file doesn't exist
if [ ! -f "$CONFIGFILE" ] ; then
    echo "Config file: file not found"
    exit 0
fi

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh
VERBOSE="yes"

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

if [ ! -d $PIDDIR/$SERVERNAME ]; then
	mkdir -p $PIDDIR/$SERVERNAME
	chown -R ${USER}:odoo $PIDDIR
fi

check_process() {
    PID=0
    
    if [[ -e $PIDFILE ]] ; then
        PID=`cat $PIDFILE`
    else
        return 1
    fi
    
    if ps -p $PID > /dev/null ; then 
        return 0
    else
        return 1
    fi
}

do_start() {
	mkdir -p ${PIDDIR}/${SERVERNAME}
	chown -R ${USER}:odoo ${PIDDIR}/${SERVERNAME}
	chmod g+w ${PIDDIR}/${SERVERNAME}
	
	mkdir -p ${LOGDIR}/${SERVERNAME}
	chown -R ${USER}:odoo ${LOGDIR}/${SERVERNAME}
	chmod g+w ${LOGDIR}/${SERVERNAME}
    
	sudo -u $USER -g odoo start-stop-daemon --start --quiet  --background \
		--pidfile $PIDFILE --startas $DAEMON -- $DAEMON_OPTS

	i=10
    while [[ $i > 0 ]]; do
        if check_process ; then
            return 0
        else
            sleep 1
            let i=i-1
        fi
    done
	return $?
}

do_stop() {
	start-stop-daemon --stop --quiet --oknodo \
	--retry TERM/5/KILL/3 --pidfile $PIDFILE

	return $?
}

do_restart() {
    do_stop
    case "$?" in
        0|1)
            do_start
            case "$?" in
                    0) return 0 ;;
                    *) return 2 ;; # Failed to start
            esac
            ;;
        *)
            # Failed to stop
            return 2
            ;;
        esac
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
    if check_process ; then
        echo "$DESC ($NAME) is runing."
    else
        echo "$DESC ($NAME) is not runing."
    fi
    ;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
        do_restart
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
		;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac

:
